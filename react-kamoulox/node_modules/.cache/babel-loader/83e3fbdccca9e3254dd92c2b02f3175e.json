{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"S:\\\\Documents\\\\Master 2\\\\PWA\\\\kamoulox\\\\kamoulox\\\\src\\\\components\\\\AppQuestion.js\";\nimport React, { Component } from 'react';\nimport { getQuestions } from '../fonctions/appelleApi';\nimport Question from './Question';\nimport Reponse from './Reponse';\n\nclass AppQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initQuestions = () => {\n      getQuestions(10).then(data => {\n        this.setState({\n          listeQuestions: data,\n          etape: 0\n        });\n        console.log(this.state.listeQuestions);\n      });\n    };\n\n    this.verifReponse = indexReponse => {\n      const {\n        listeQuestions,\n        etape,\n        reponseCliquer,\n        score\n      } = this.state;\n\n      if (!reponseCliquer) {\n        if (indexReponse === listeQuestions[etape].indexBonneReponse) {\n          this.setState({\n            reponseCorrect: true,\n            reponseCliquer: true,\n            score: score + Math.floor(Math.random() * Math.floor(20))\n          });\n        } else {\n          this.setState({\n            reponseCorrect: false,\n            reponseCliquer: true,\n            score: score - Math.floor(Math.random() * Math.floor(3))\n          });\n        }\n      }\n\n      this.setGoodAns();\n    };\n\n    this.nextStep = etape => {\n      this.setAllDef();\n      this.setState({\n        etape: etape + 1,\n        reponseCorrect: null,\n        reponseCliquer: false\n      });\n      console.log(this.state.listeQuestions.length);\n      console.log(this.state.etape);\n    };\n\n    this.setAllDef = () => {\n      let reponse = document.getElementsByClassName(\"reponse\");\n\n      for (let i = 0; i < reponse.length; i++) {\n        reponse[i].style = \"\";\n      }\n    };\n\n    this.setGoodAns = () => {\n      let reponse = document.getElementsByClassName(\"reponse\");\n\n      for (let i = 0; i < reponse.length; i++) {\n        reponse[i].style.backgroundColor = \"#f74b4b\";\n      }\n\n      console.log(\"Bonne rÃ©ponse: \" + this.state.listeQuestions[this.state.etape].indexBonneReponse);\n      document.getElementById(this.state.listeQuestions[this.state.etape].indexBonneReponse).style.backgroundColor = \"#36e54b\";\n    };\n\n    this.maskFalseAns = () => {};\n\n    this.state = {\n      listeQuestions: [],\n      etape: null,\n      reponseCorrect: false,\n      reponseCliquer: false,\n      score: 0\n    };\n  }\n\n  componentDidMount() {\n    this.initQuestions();\n  }\n\n  render() {\n    let {\n      listeQuestions,\n      etape,\n      reponseCliquer,\n      reponseCorrect,\n      score\n    } = this.state;\n\n    if (listeQuestions.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(etape), console.log(listeQuestions.length), etape < listeQuestions.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Question, {\n            enonce: listeQuestions[etape].enonce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Reponse, {\n            reponses: listeQuestions[etape].reponses,\n            etape: etape,\n            verifReponse: this.verifReponse,\n            reponseCorrect: reponseCorrect,\n            reponseCliquer: reponseCliquer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"score\",\n            children: [\"Score : \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"bonus\",\n            onClick: () => this.maskFalseAns(),\n            children: \"Bonus ! (10Pts)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"bouton\",\n            disabled: reponseCliquer && listeQuestions.length >= etape ? false : true,\n            onClick: () => this.nextStep(etape),\n            children: \"Suivant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Quiz termin\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Merci !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.initQuestions(),\n            children: \"Nouveau Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default AppQuestion;","map":{"version":3,"sources":["S:/Documents/Master 2/PWA/kamoulox/kamoulox/src/components/AppQuestion.js"],"names":["React","Component","getQuestions","Question","Reponse","AppQuestion","constructor","props","initQuestions","then","data","setState","listeQuestions","etape","console","log","state","verifReponse","indexReponse","reponseCliquer","score","indexBonneReponse","reponseCorrect","Math","floor","random","setGoodAns","nextStep","setAllDef","length","reponse","document","getElementsByClassName","i","style","backgroundColor","getElementById","maskFalseAns","componentDidMount","render","enonce","reponses"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {getQuestions} from '../fonctions/appelleApi';\r\nimport Question from './Question';\r\nimport Reponse from './Reponse'\r\n\r\nclass AppQuestion extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            listeQuestions:[],\r\n            etape:null,\r\n            reponseCorrect:false,\r\n            reponseCliquer:false,\r\n            score:0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initQuestions()\r\n    }\r\n\r\n    initQuestions = () => {\r\n        getQuestions(10).then(data =>{\r\n            this.setState(\r\n                {\r\n                    listeQuestions:data,\r\n                    etape:0\r\n                }\r\n            )\r\n            console.log(this.state.listeQuestions)\r\n        })\r\n    }\r\n\r\n    verifReponse = (indexReponse) => {\r\n        const {listeQuestions, etape, reponseCliquer,score} = this.state\r\n        if(!reponseCliquer){\r\n            if(indexReponse===listeQuestions[etape].indexBonneReponse){\r\n                this.setState({\r\n                    reponseCorrect:true,\r\n                    reponseCliquer:true,\r\n                    score:score+Math.floor(Math.random() * Math.floor(20))\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    reponseCorrect:false,\r\n                    reponseCliquer:true,\r\n                    score:score-Math.floor(Math.random() * Math.floor(3))\r\n                })\r\n            }\r\n        }\r\n        this.setGoodAns()\r\n    }\r\n\r\n    nextStep = (etape) => {\r\n        this.setAllDef()\r\n        this.setState({\r\n            etape: etape + 1,\r\n            reponseCorrect: null,\r\n            reponseCliquer:false\r\n        });\r\n        console.log(this.state.listeQuestions.length)\r\n        console.log(this.state.etape)\r\n    }\r\n\r\n    setAllDef = () => {\r\n        let reponse = document.getElementsByClassName(\"reponse\");\r\n        for(let i=0;i<reponse.length;i++){\r\n            reponse[i].style=\"\";\r\n        }\r\n    }\r\n\r\n    setGoodAns = () => {\r\n        let reponse = document.getElementsByClassName(\"reponse\");\r\n        for(let i=0;i<reponse.length;i++){\r\n            reponse[i].style.backgroundColor=\"#f74b4b\";\r\n        }\r\n        console.log(\"Bonne rÃ©ponse: \"+this.state.listeQuestions[this.state.etape].indexBonneReponse)\r\n        document.getElementById(this.state.listeQuestions[this.state.etape].indexBonneReponse).style.backgroundColor=\"#36e54b\";\r\n    }\r\n\r\n    maskFalseAns = () => {\r\n\r\n    }\r\n\r\n    render(){\r\n        let {listeQuestions, etape, reponseCliquer, reponseCorrect, score} = this.state;\r\n        if(listeQuestions.length>0){\r\n            return (\r\n                <div>\r\n                    {console.log(etape)}\r\n                    {console.log(listeQuestions.length)}\r\n                    {etape < listeQuestions.length ?\r\n                        (<>\r\n                        <Question enonce={listeQuestions[etape].enonce}/>\r\n                        <Reponse \r\n                            reponses={listeQuestions[etape].reponses}\r\n                            etape={etape}\r\n                            verifReponse={this.verifReponse}\r\n                            reponseCorrect={reponseCorrect}\r\n                            reponseCliquer={reponseCliquer}\r\n                        />\r\n                        <div id=\"score\">Score : {score}</div>\r\n                        <div id=\"bonus\" onClick={() => this.maskFalseAns()}>Bonus ! (10Pts)</div>\r\n                        <button id=\"bouton\" disabled={\r\n                            reponseCliquer && listeQuestions.length >= etape\r\n                            ? false : true\r\n                        }\r\n                        onClick={() => this.nextStep(etape)}>Suivant</button>\r\n                        </>):(\r\n                            <div>\r\n                                <h1>Quiz terminÃ©</h1>\r\n                                <p>Merci !</p>\r\n                                <button onClick={() => this.initQuestions()}>Nouveau Quiz</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            )\r\n        }else{\r\n            return (null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppQuestion"]},"metadata":{},"sourceType":"module"}