{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(App,{})}),document.getElementById('root'));if(navigator.serviceWorker){navigator.serviceWorker.register('serviceWorker.js').catch(function(err){return console.error('service worker NON enregistré',err);});}if(window.caches){caches.open('veille-techno-1.0').then(function(cache){cache.addAll(['index.html','index.js']).then(console.log('cache initialisé')).catch(console.err);});}","map":{"version":3,"sources":["S:/Documents/Master 2/PWA/kamoulox/kamoulox/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById","navigator","serviceWorker","register","catch","err","console","error","window","caches","open","then","cache","addAll","log"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CAEAD,QAAQ,CAACE,MAAT,cACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,GAAD,IADF,EADF,CAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,EAQA,GAAGC,SAAS,CAACC,aAAb,CAA2B,CACzBD,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,kBAAjC,EAAqDC,KAArD,CAA2D,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,CAA+CF,GAA/C,CAAJ,EAA9D,EACD,CAED,GAAGG,MAAM,CAACC,MAAV,CAAiB,CACfA,MAAM,CAACC,IAAP,CAAY,mBAAZ,EAAiCC,IAAjC,CAAsC,SAAAC,KAAK,CAAI,CAC3CA,KAAK,CAACC,MAAN,CAAa,CACT,YADS,CAET,UAFS,CAAb,EAICF,IAJD,CAIML,OAAO,CAACQ,GAAR,CAAY,kBAAZ,CAJN,EAKCV,KALD,CAKOE,OAAO,CAACD,GALf,EAMH,CAPD,EAQD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nif(navigator.serviceWorker){\n  navigator.serviceWorker.register('serviceWorker.js').catch(err => console.error('service worker NON enregistré', err));\n}\n\nif(window.caches){\n  caches.open('veille-techno-1.0').then(cache => {\n      cache.addAll([\n          'index.html',\n          'index.js'\n      ])\n      .then(console.log('cache initialisé'))\n      .catch(console.err);\n  });\n}\n\n"]},"metadata":{},"sourceType":"module"}