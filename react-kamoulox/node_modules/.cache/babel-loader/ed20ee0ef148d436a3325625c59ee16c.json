{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"S:\\\\Documents\\\\Master 2\\\\PWA\\\\kamoulox\\\\kamoulox\\\\src\\\\components\\\\AppQuestion.js\";\nimport React, { Component } from 'react';\nimport { getQuestions } from '../fonctions/appelleApi';\nimport Question from './Question';\nimport Reponse from './Reponse';\n\nclass AppQuestion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initQuestions = () => {\n      getQuestions(10).then(data => {\n        this.setState({\n          listeQuestions: data,\n          etape: 0\n        });\n        console.log(this.state.listeQuestions);\n      });\n    };\n\n    this.verifReponse = indexReponse => {\n      const {\n        listeQuestions,\n        etape,\n        reponseCliquer\n      } = this.state;\n\n      if (reponseCliquer) {\n        if (indexReponse === listeQuestions[etape].indexBonneReponse) {\n          this.setState({\n            reponseCorrect: true,\n            reponseCliquer: true\n          });\n          console.log(\"bonne réponse\");\n        } else {\n          this.setState({\n            reponseCorrect: false,\n            reponseCliquer: true\n          });\n          console.log(\"mauvaise réponse\");\n        }\n      }\n    };\n\n    this.nextStep = etape => {\n      this.setState({\n        etape: etape + 1,\n        reponseCorrect: null,\n        reponseCliquer: false\n      });\n    };\n\n    this.state = {\n      listeQuestions: [],\n      etape: null,\n      reponseCorrect: false,\n      reponseCliquer: false\n    };\n  }\n\n  componentDidMount() {\n    this.initQuestions();\n  }\n\n  render() {\n    let {\n      listeQuestions,\n      etape,\n      reponseCliquer,\n      reponseCorrect\n    } = this.state;\n\n    if (listeQuestions.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: etape <= listeQuestions.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Question, {\n            enonce: listeQuestions[etape].enonce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Reponse, {\n            reponses: listeQuestions[etape].reponses,\n            etape: etape,\n            verifReponse: this.verifReponse,\n            reponseCorrect: reponseCorrect,\n            reponseCliquer: reponseCliquer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: reponseCliquer && listeQuestions.length >= etape ? false : true,\n            onClick: () => this.nextStep(etape),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Quiz termin\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Merci !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default AppQuestion;","map":{"version":3,"sources":["S:/Documents/Master 2/PWA/kamoulox/kamoulox/src/components/AppQuestion.js"],"names":["React","Component","getQuestions","Question","Reponse","AppQuestion","constructor","props","initQuestions","then","data","setState","listeQuestions","etape","console","log","state","verifReponse","indexReponse","reponseCliquer","indexBonneReponse","reponseCorrect","nextStep","componentDidMount","render","length","enonce","reponses"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {getQuestions} from '../fonctions/appelleApi';\r\nimport Question from './Question';\r\nimport Reponse from './Reponse'\r\n\r\nclass AppQuestion extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            listeQuestions:[],\r\n            etape:null,\r\n            reponseCorrect:false,\r\n            reponseCliquer:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initQuestions()\r\n    }\r\n\r\n    initQuestions = () => {\r\n        getQuestions(10).then(data =>{\r\n            this.setState(\r\n                {\r\n                    listeQuestions:data,\r\n                    etape:0\r\n                }\r\n            )\r\n            console.log(this.state.listeQuestions)\r\n        })\r\n    }\r\n\r\n    verifReponse = (indexReponse) => {\r\n        const {listeQuestions, etape, reponseCliquer} = this.state\r\n        if(reponseCliquer){\r\n            if(indexReponse===listeQuestions[etape].indexBonneReponse){\r\n                this.setState({\r\n                    reponseCorrect:true,\r\n                    reponseCliquer:true\r\n                });\r\n                console.log(\"bonne réponse\")\r\n            }else{\r\n                this.setState({\r\n                    reponseCorrect:false,\r\n                    reponseCliquer:true\r\n                })\r\n                console.log(\"mauvaise réponse\")\r\n            }\r\n        }\r\n    }\r\n\r\n    nextStep = (etape) => {\r\n        this.setState({\r\n            etape: etape + 1,\r\n            reponseCorrect: null,\r\n            reponseCliquer:false\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let {listeQuestions, etape, reponseCliquer, reponseCorrect} = this.state;\r\n        if(listeQuestions.length>0){\r\n            return (\r\n                <div>\r\n                    {etape <= listeQuestions.length ?\r\n                        (<>\r\n                        <Question enonce={listeQuestions[etape].enonce}/>\r\n                        <Reponse \r\n                            reponses={listeQuestions[etape].reponses}\r\n                            etape={etape}\r\n                            verifReponse={this.verifReponse}\r\n                            reponseCorrect={reponseCorrect}\r\n                            reponseCliquer={reponseCliquer}\r\n                        />\r\n                        <button disabled={\r\n                            reponseCliquer && listeQuestions.length >= etape\r\n                            ? false : true\r\n                        }\r\n                        onClick={() => this.nextStep(etape)}>Next</button>\r\n                        </>):(\r\n                            <div>\r\n                                <h1>Quiz terminé</h1>\r\n                                <p>Merci !</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            )\r\n        }else{\r\n            return (null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppQuestion"]},"metadata":{},"sourceType":"module"}